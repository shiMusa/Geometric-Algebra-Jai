#import "Basic";
#import,file "module.jai"(1,1,1);

main :: () {
    println("e00 %", fmt(e0*e0));
    println("e11 %", fmt(e1*e1));
    println("e12 %", fmt(e1*e2));
    println("e21 %", fmt(e2*e1));

    // println("hamming_weight(5) = %", hamming_weight(5));

    println("42.0 * e2 = %", fmt(42.0 * e2));
    println("e3 * 313.0 = %", fmt(e3 * 313.0));


    x := MultiVector(1,2).{.[1.0, 2.0]};


    mv_print :: (name: string, mv: $V/MultiVector) {
        println("% : % = %", name, type_of(mv), fmt(mv));
    }

    println("x : % = %", type_of(x), fmt(x));

    y := e1 + e1;
    println("y : % = %", type_of(y), fmt(y));

    z := e1 + e2;
    println("z : % = %", type_of(z), fmt(z));

    w := 1.0 + e1;
    println("w : % = %", type_of(w), fmt(w));

    v := y + w + y;
    println("v : % = %", type_of(v), fmt(v));

    v2 := v + z;
    println("v2 : % = %", type_of(v2), fmt(v2));

    v3 := v2 - x - 42.0 + e123;
    println("v3 : % = %", type_of(v3), fmt(v3));

    v4 := (1.0 + e123) + v3;
    println("v4 : % = %", type_of(v4), fmt(v4));

    k0 := v4 * v3;
    mv_print("k0", k0);

    k1 := v3 * w;
    mv_print("k1", k1);

    k2 := MV_ZERO;
    k2 += k1;
    for i: 0..3 {
        mv_print("k2", k2);
        k2 *= k1;
    }

    v3_dual := dual(v3);
    mv_print("v3_dual", v3_dual);

    v3_dual_reverse := reverse(v3_dual);
    mv_print("v3_dual_reverse", v3_dual_reverse);

    println("select 0 of v3_dual_reverse: %", fmt(select(v3_dual_reverse, 0)));
    println("select 1 of v3_dual_reverse: %", fmt(select(v3_dual_reverse, 1)));
    println("select 2 of v3_dual_reverse: %", fmt(select(v3_dual_reverse, 2)));
    println("select 3 of v3_dual_reverse: %", fmt(select(v3_dual_reverse, 3)));

    println("polar of v3: %", fmt(polar(v3)));

    println("v3 * k0 = %", fmt(v3*k0));
    println("meet of v3 and k0: %", fmt(meet(v3, k0)));
    println("join of v3 and k0: %", fmt(join(v3, k0)));
    println("x * w = %", fmt(x*w));
    println("meet of x and w: %", fmt(meet(x, w)));
    println("join of x and w: %", fmt(join(x, w)));
    println("x * e3 = %", fmt(x*e3));
    println("meet of x and e3: %", fmt(meet(x, e3)));
    println("join of x and e3: %", fmt(join(x, e3)));


    println("join of w and v: %", fmt(join(w, v)));
}